{
    "description": "Pipeline for parsing osquery snapshot logs",
    "processors": [
      {
        "rename": {
          "field": "@timestamp",
          "target_field": "read_timestamp"
        }
      },
      {
        "date": {
          "field": "json.unixTime",
          "target_field": "@timestamp",
          "formats": [
            "UNIX"
          ],
          "ignore_failure": true
        }
      },
      {
        "script": {
          "lang": "painless",
          "source": "for(int i=0; i<ctx['json']['snapshot'].size(); i++){ ctx['json']['columns'] = ctx['json']['snapshot'][i];} ctx['json'].remove('snapshot');"
        }
      },
      {<if .use_namespace >}
      {"script": {
          "lang": "painless",
          "source": "def dict = ['snapshot': new HashMap()]; for (entry in ctx['json'].entrySet()) { dict['snapshot'][entry.getKey()] = entry.getValue(); } ctx['osquery'] = dict; ctx.remove('json');"
        }
      },
      {< end >}
      {
        "rename": {
          "field": "osquery.snapshot.hostIdentifier",
          "target_field": "osquery.snapshot.host_identifier",
          "ignore_missing": true
        }
      },
      {
        "rename": {
          "field": "osquery.snapshot.unixTime",
          "target_field": "osquery.snapshot.unix_time",
          "ignore_missing": true
        }
      },
      {
        "rename": {
          "field": "osquery.snapshot.calendarTime",
          "target_field": "osquery.snapshot.calendar_time",
          "ignore_missing": true
        }
      }
    ],
    "on_failure": [
      {
        "set": {
          "field": "error.message",
          "value": "{{ _ingest.on_failure_message }}"
        }
      }
    ]
  }
